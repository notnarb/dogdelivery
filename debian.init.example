#!/bin/sh

### BEGIN INIT INFO
# Provides:          ddog
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts dogdelivery (production)
# Description:       starts dogdelivery using start-stop-daemon
### END INIT INFO

# Include init functions
. /lib/lsb/init-functions


RUNAS=ddog
NAME=DOGPROD
GUN_COMMAND=/usr/local/bin/gunicorn
PYTHON_COMMAND=/usr/bin/python

APP_FOLDER=/var/www/code/dogdelivery/stable/
GUN_CONF=run_dog.conf

PIDFILE=/var/run/ddog/$NAME.pid

if [ ! -d /var/run/ddog ]; then
    mkdir /var/run/ddog
    chown $RUNAS:$RUNAS /var/run/ddog
fi

OPTS="$GUN_COMMAND -c $APP_FOLDER$GUN_CONF dogdelivery.wsgi:application -D -p $PIDFILE"

# Return 0 if running, 1 if not
check_status() {
    retval=0
    start-stop-daemon --status -p $PIDFILE --exec $PYTHON_COMMAND || retval=$?
    if [ "$retval" = 0 ]; then
	return 0
    else
	return 1
    fi
	
#    status="0"
    # pidofproc $PIDFILE $PYTHON_COMMAND  || status="$?"
    # if [ $status = 0 ]; then
    # 	return 0
    # else
    # 	return 1
    # fi
}
status() {
    status_of_proc -p $PIDFILE $PYTHON_COMMAND DogDelivery && exit 0 || exit $?
}

start() {
    #check_status
    # echo $?
    # if check_status; then 
    # 	log_failure_message "DogDelivery is already running"
    # 	exit 1
    # fi
    start-stop-daemon --chuid $RUNAS --start --pidfile $PIDFILE --exec $PYTHON_COMMAND -- $OPTS
}

stop() {
    start-stop-daemon --user $RUNAS --stop --pidfile $PIDFILE --exec $PYTHON_COMMAND
}

case $1 in
    start)
	if check_status; then
	    log_success_msg "DogDelivery already running"
	    exit 0
	fi
	echo "Starting DogDelivery"
	start
	sleep 0.5
	status
	;;
    stop)	
	if check_status; then
	    :
	else
	    echo "DogDelivery is not running"
	    exit 1
	fi
	echo "Stopping DogDelivery"
	stop
	sleep 0.5
	if check_status; then
	    log_failure_msg "Failed to stop"
	else
	    log_success_msg "Successfully stopped"
	fi
	;;
    restart)

	if check_status; then
	    echo "Restarting DogDelivery"
	    stop
	    sleep 0.5
	else
	    echo "DogDelivery not already running, Starting DogDelivery"
	fi
	start
	sleep 0.5
	status
	;;
    status)
	status
	;;
    *)
	echo "Usage: $0 start|stop|restart|status" >&2
	exit 1
	;;
esac

